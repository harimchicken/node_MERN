openapi: 3.0.0
info:
  title: BLOG MERN TEST API
  description: MERN Development
  version: 1.0.0

servers:
  - url: http://localhost:5000
    description: Local development server


paths:

  /api/users/register:
    post:
      tags:
        - Users
      summary: Register a new user account and send a verification email
      description: The first account registered in the system is assigned the `Admin` role, other accounts are assigned the `User` role.
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "youmate"
                email:
                  type: string
                  example: "youmate@youmate.com"
                password:
                  type: string
                  example: "pass123"
              required:
                - name
                - email
                - password
      responses:
        "200":
          description: The registration request was successful and a verification email has been sent to the specified email address
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    #                    example: "Email has been sent to youmate@youmate.com"
                    example: "Registration successful, please check your email for verification instructions"




  /api/users/activation:
      post:
        tags:
          - Users
        summary: Verify a new account with a verification token received by email after registration
        operationId: verifyEmail
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "3c7f8d9c4cb348ff95a0b74a1452aa24fc9611bb76768bb9eafeeb826ddae2935f1880bc7713318f"
                required:
                  - token
        responses:
          "200":
            description: Verification was successful so you can now login to the account
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Verification successful, you can now login"
          "401":
            description: Verification failed due to an invalid token
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Expired link. Signup again"




  /api/users/login:
    post:
      tags:
        - Users
      summary: Login and return tokens after checking your new account
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "youmate@youmate.com"
                password:
                  type: string
                  example: "pass123"
              required:
                - email
                - password
      responses:
        "200":
          description: Returns the token when login is successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    #                    example: "Successful login by youmate@youmate.com"
                    example: "As a result of account verification, login success and token returned."
            



  /api/users/google:
    get:
      tags:
        - Users
      summary: Social login through Google Passport.
      operationId: google_login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  example: 3c7f8d9c4cb348ff95a0b74a1452aa24fc9611bb76768bb9eafeeb826ddae2935f1880bc7713318f
              required:
                - access_token
      responses:
        "200":
          description: Returns the token when login is successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example1: "success: true,"



  /api/users/login/facebook:
    post:
      tags:
        - Users
      summary: Login and return tokens after checking your new account
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "youmate@youmate.com"
                password:
                  type: string
                  example: "pass123"
              required:
                - email
                - password
      responses:
        "200":
          description: Returns the token when login is successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    #                    example: "Successful login by youmate@youmate.com"
                    example: "As a result of account verification, login success and token returned."